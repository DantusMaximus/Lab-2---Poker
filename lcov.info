SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Player.cs
FN:25,System.Void Player::Give(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:82,System.Void Player::Give(System.Collections.Generic.List`1<Poker.ICard>)
DA:26,82
DA:27,437
DA:28,356
DA:29,356
DA:30,356
DA:31,355
DA:32,355
DA:33,81
BRDA:27,57,1,356
BRDA:27,57,0,81
FN:34,System.Void Player::RemoveCards()
FNDA:11,System.Void Player::RemoveCards()
DA:35,11
DA:36,37
DA:37,2
DA:38,2
DA:39,2
DA:40,2
DA:41,2
DA:42,2
DA:43,11
BRDA:36,58,1,2
BRDA:38,32,0,2
BRDA:38,32,1,2
BRDA:36,58,0,11
FN:44,System.Void Player::JustWon()
FNDA:3,System.Void Player::JustWon()
DA:45,3
DA:46,3
DA:47,3
FN:48,System.String Player::ToString()
FNDA:3,System.String Player::ToString()
DA:49,3
DA:50,3
DA:51,3
DA:52,3
DA:53,3
DA:54,3
FN:54,System.String Player::Poker.IPlayer.get_Name()
FNDA:32,System.String Player::Poker.IPlayer.get_Name()
DA:55,32
FN:55,Poker.ICard[] Player::Poker.IPlayer.get_Hand()
FNDA:2,Poker.ICard[] Player::Poker.IPlayer.get_Hand()
DA:56,2
FN:57,Poker.HandType Player::Poker.IPlayer.get_HandType()
FNDA:192,Poker.HandType Player::Poker.IPlayer.get_HandType()
DA:58,192
FN:59,System.Int32 Player::Poker.IPlayer.get_Wins()
FNDA:4,System.Int32 Player::Poker.IPlayer.get_Wins()
DA:60,4
FN:61,Poker.ICard[] Player::Poker.IPlayer.get_Discard()
FNDA:4,Poker.ICard[] Player::Poker.IPlayer.get_Discard()
DA:62,4
FN:10,System.Void Player::.ctor(System.String)
FNDA:114,System.Void Player::.ctor(System.String)
DA:11,114
DA:12,114
DA:14,114
FN:14,System.Void Player::.ctor(System.String,System.Int32)
FNDA:121,System.Void Player::.ctor(System.String,System.Int32)
DA:15,121
DA:16,121
DA:17,122
DA:18,1
DA:20,120
DA:21,120
DA:22,120
DA:23,120
DA:24,120
BRDA:17,14,0,1
BRDA:17,14,1,120
LF:43
LH:43
BRF:8
BRH:8
FNF:11
FNH:11
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Card.cs
FN:6,Poker.Suite Poker.Card::get_Suite()
FNDA:63529,Poker.Suite Poker.Card::get_Suite()
DA:7,63529
FN:8,Poker.Rank Poker.Card::get_Rank()
FNDA:109439,Poker.Rank Poker.Card::get_Rank()
DA:9,109439
FN:15,System.Boolean Poker.Card::Equals(System.Object)
FNDA:918,System.Boolean Poker.Card::Equals(System.Object)
DA:16,918
DA:17,918
DA:18,918
DA:19,734
DA:20,183
DA:21,117
DA:22,66
DA:23,917
BRDA:18,27,0,734
BRDA:18,27,1,183
BRDA:20,52,0,117
BRDA:20,52,1,66
FN:9,System.Void Poker.Card::.ctor(Poker.Rank,Poker.Suite)
FNDA:13864,System.Void Poker.Card::.ctor(Poker.Rank,Poker.Suite)
DA:10,13864
DA:11,13864
DA:12,13864
DA:13,13864
DA:14,13864
LF:15
LH:15
BRF:4
BRH:4
FNF:4
FNH:4
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Deck.cs
FN:6,System.Collections.Generic.List`1<Poker.ICard> Poker.Deck::get_Content()
FNDA:8843,System.Collections.Generic.List`1<Poker.ICard> Poker.Deck::get_Content()
DA:7,8843
FN:24,System.Void Poker.Deck::Randomize()
FNDA:30,System.Void Poker.Deck::Randomize()
DA:25,30
DA:26,30
DA:27,30
DA:28,30
DA:29,1560
DA:30,1530
DA:31,1530
DA:32,1530
DA:33,1530
DA:34,1530
DA:35,1530
DA:36,1530
DA:37,30
BRDA:29,101,1,1530
BRDA:29,101,0,30
FN:38,System.Void Poker.Deck::ShuffleInCards()
FNDA:3,System.Void Poker.Deck::ShuffleInCards()
DA:39,3
DA:40,3
DA:41,3
DA:42,3
DA:43,3
FN:44,System.Collections.Generic.List`1<Poker.ICard> Poker.Deck::Draw(System.Int32)
FNDA:29,System.Collections.Generic.List`1<Poker.ICard> Poker.Deck::Draw(System.Int32)
DA:45,29
DA:46,29
DA:47,896
DA:48,420
DA:49,420
DA:50,420
DA:51,419
DA:52,419
DA:53,28
DA:54,28
DA:55,28
BRDA:47,69,1,420
BRDA:47,69,0,28
FN:9,System.Void Poker.Deck::.ctor()
FNDA:27,System.Void Poker.Deck::.ctor()
DA:10,27
DA:11,27
DA:12,27
DA:13,27
DA:14,756
DA:15,351
DA:16,3510
DA:17,1404
DA:18,1404
DA:19,1404
DA:20,351
DA:21,27
DA:22,27
BRDA:14,85,1,351
BRDA:16,71,1,1404
BRDA:16,71,0,351
BRDA:14,85,0,27
LF:43
LH:43
BRF:8
BRH:8
FNF:5
FNH:5
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\FileManager.cs
FN:13,System.Boolean Poker.FileManager::SaveGame(Poker.IWriter,System.Collections.Generic.List`1<Poker.IPlayer>)
FNDA:1,System.Boolean Poker.FileManager::SaveGame(Poker.IWriter,System.Collections.Generic.List`1<Poker.IPlayer>)
DA:14,1
DA:15,1
DA:16,1
DA:17,1
DA:18,1
DA:19,1
FN:20,System.Void Poker.FileManager::CreateSaveDirIfNonExistent()
FNDA:1,System.Void Poker.FileManager::CreateSaveDirIfNonExistent()
DA:21,1
DA:22,3
DA:29,1
FN:30,System.Collections.Generic.List`1<Poker.IPlayer> Poker.FileManager::LoadGame(Poker.IReader)
FNDA:17,System.Collections.Generic.List`1<Poker.IPlayer> Poker.FileManager::LoadGame(Poker.IReader)
DA:31,17
DA:32,17
DA:33,5
DA:34,5
DA:35,28
DA:36,8
DA:37,8
DA:38,1
DA:39,1
DA:41,7
DA:42,3
DA:43,3
DA:45,4
DA:46,4
DA:47,2
DA:49,2
BRDA:35,118,1,8
BRDA:37,56,0,1
BRDA:37,56,1,7
BRDA:41,76,0,3
BRDA:41,76,1,4
BRDA:35,118,0,2
FN:51,System.String Poker.FileManager::ConvertToString(System.Collections.Generic.List`1<Poker.IPlayer>)
FNDA:1,System.String Poker.FileManager::ConvertToString(System.Collections.Generic.List`1<Poker.IPlayer>)
DA:52,1
DA:53,1
DA:54,7
DA:55,2
DA:56,2
DA:57,2
DA:58,1
DA:59,1
DA:60,1
DA:61,1
BRDA:54,57,1,2
BRDA:54,57,0,1
FN:62,System.Collections.Generic.List`1<Poker.IPlayer> Poker.FileManager::ConvertToPlayers(System.Collections.Generic.List`1<System.String>)
FNDA:2,System.Collections.Generic.List`1<Poker.IPlayer> Poker.FileManager::ConvertToPlayers(System.Collections.Generic.List`1<System.String>)
DA:63,2
DA:64,2
DA:65,14
DA:66,4
DA:67,4
DA:68,4
DA:69,4
DA:70,2
DA:71,2
BRDA:65,49,1,4
BRDA:65,49,0,2
FN:72,Poker.IPlayer Poker.FileManager::ConvertToPlayer(System.String)
FNDA:4,Poker.IPlayer Poker.FileManager::ConvertToPlayer(System.String)
DA:73,4
DA:74,4
DA:75,4
DA:76,4
DA:77,4
DA:78,4
DA:79,4
DA:80,4
FN:81,System.String[] Poker.FileManager::FileToPlayerStrings(Poker.IReader)
FNDA:17,System.String[] Poker.FileManager::FileToPlayerStrings(Poker.IReader)
DA:82,17
DA:83,17
DA:84,5
DA:85,5
LF:56
LH:56
BRF:10
BRH:10
FNF:7
FNH:7
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Hand.cs
FN:8,System.Int32 Poker.Hand::get_Count()
FNDA:11,System.Int32 Poker.Hand::get_Count()
DA:9,11
FN:10,System.Collections.Generic.List`1<Poker.ICard> Poker.Hand::get_Cards()
FNDA:857,System.Collections.Generic.List`1<Poker.ICard> Poker.Hand::get_Cards()
DA:11,857
FN:11,System.Void Poker.Hand::set_Cards(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:21,System.Void Poker.Hand::set_Cards(System.Collections.Generic.List`1<Poker.ICard>)
DA:12,21
DA:13,21
DA:14,84
DA:15,21
BRDA:14,16,0,21
BRDA:14,16,1,21
FN:16,Poker.IPlayer Poker.Hand::get_Player()
FNDA:108,Poker.IPlayer Poker.Hand::get_Player()
DA:17,108
FN:17,Poker.HandType Poker.Hand::get_HandType()
FNDA:370,Poker.HandType Poker.Hand::get_HandType()
DA:18,370
FN:37,System.Void Poker.Hand::Add(Poker.ICard)
FNDA:429,System.Void Poker.Hand::Add(Poker.ICard)
DA:38,429
DA:39,431
DA:40,429
DA:41,1
DA:43,427
DA:44,679
DA:45,427
BRDA:39,15,0,1
BRDA:39,15,1,428
BRDA:40,37,0,1
BRDA:40,37,1,427
BRDA:44,72,0,84
BRDA:44,72,1,427
FN:47,System.Boolean Poker.Hand::Contains(Poker.ICard)
FNDA:4,System.Boolean Poker.Hand::Contains(Poker.ICard)
DA:48,4
DA:49,4
DA:50,4
FN:52,System.Void Poker.Hand::Remove(Poker.ICard)
FNDA:48,System.Void Poker.Hand::Remove(Poker.ICard)
DA:53,48
DA:54,48
DA:55,48
FN:57,System.Boolean Poker.Hand::IsFull()
FNDA:1316,System.Boolean Poker.Hand::IsFull()
DA:58,1316
DA:59,1316
DA:60,1316
FN:18,System.Void Poker.Hand::.ctor(Poker.IPlayer)
FNDA:122,System.Void Poker.Hand::.ctor(Poker.IPlayer)
DA:19,122
DA:20,122
DA:21,123
DA:22,1
DA:24,121
DA:25,121
DA:26,121
BRDA:21,14,0,1
BRDA:21,14,1,121
FN:26,System.Void Poker.Hand::.ctor(Poker.IPlayer,System.Collections.Generic.List`1<Poker.ICard>)
FNDA:76,System.Void Poker.Hand::.ctor(Poker.IPlayer,System.Collections.Generic.List`1<Poker.ICard>)
DA:27,76
DA:28,76
DA:29,78
DA:30,2
DA:32,74
DA:33,74
DA:34,74
BRDA:29,9,0,75
BRDA:29,9,1,1
BRDA:29,20,0,2
BRDA:29,20,1,74
LF:38
LH:38
BRF:14
BRH:14
FNF:11
FNH:11
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Reader.cs
FN:12,System.String Poker.Reader::ReadToEnd()
FNDA:1,System.String Poker.Reader::ReadToEnd()
DA:13,1
DA:14,2
DA:15,1
DA:17,0
DA:18,0
DA:19,0
DA:21,0
BRDA:14,17,0,1
BRDA:14,17,1,0
FN:10,System.Void Poker.Reader::.ctor(System.String)
FNDA:4,System.Void Poker.Reader::.ctor(System.String)
DA:11,4
LF:8
LH:4
BRF:2
BRH:1
FNF:2
FNH:2
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\ScoreLogic.cs
FN:10,Poker.HandType Poker.ScoreLogic::DetermineHandType(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2515,Poker.HandType Poker.ScoreLogic::DetermineHandType(System.Collections.Generic.List`1<Poker.ICard>)
DA:11,2515
DA:12,2515
DA:13,2515
DA:14,3009
DA:15,2760
DA:16,2514
DA:17,2272
DA:18,2020
DA:19,1778
DA:20,1530
DA:21,1282
DA:22,1074
DA:23,270
DA:24,2515
BRDA:14,23,0,247
BRDA:14,23,1,2268
BRDA:15,42,0,246
BRDA:15,42,1,2022
BRDA:16,59,0,246
BRDA:16,59,1,1776
BRDA:17,76,0,248
BRDA:17,76,1,1528
BRDA:18,93,0,246
BRDA:18,93,1,1282
BRDA:19,110,0,248
BRDA:19,110,1,1034
BRDA:20,127,0,248
BRDA:20,127,1,786
BRDA:21,144,0,248
BRDA:21,144,1,538
BRDA:22,161,0,268
BRDA:22,161,1,270
FN:25,System.Boolean Poker.ScoreLogic::IsRoyalStraightFlush(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2515,System.Boolean Poker.ScoreLogic::IsRoyalStraightFlush(System.Collections.Generic.List`1<Poker.ICard>)
DA:26,2515
DA:27,3009
DA:28,2268
DA:29,2515
BRDA:27,7,0,493
BRDA:27,7,1,2022
BRDA:27,30,0,247
BRDA:27,30,1,2268
FN:30,System.Boolean Poker.ScoreLogic::IsStraightFlush(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:4783,System.Boolean Poker.ScoreLogic::IsStraightFlush(System.Collections.Generic.List`1<Poker.ICard>)
DA:31,4783
DA:32,6261
DA:33,4044
DA:34,4783
BRDA:32,7,0,1231
BRDA:32,7,1,3552
BRDA:32,20,0,739
BRDA:32,20,1,4044
FN:35,System.Boolean Poker.ScoreLogic::IsFourOfAKind(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2022,System.Boolean Poker.ScoreLogic::IsFourOfAKind(System.Collections.Generic.List`1<Poker.ICard>)
DA:36,2022
DA:37,2022
DA:38,2022
FN:40,System.Boolean Poker.ScoreLogic::IsFullHouse(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:1776,System.Boolean Poker.ScoreLogic::IsFullHouse(System.Collections.Generic.List`1<Poker.ICard>)
DA:41,1776
DA:42,1776
DA:43,1280
DA:44,1280
DA:46,736
DA:47,632
DA:48,248
DA:49,1776
BRDA:42,12,0,1280
BRDA:42,12,1,496
BRDA:46,50,0,120
BRDA:46,50,1,376
BRDA:47,88,0,128
BRDA:47,88,1,248
FN:51,System.Boolean Poker.ScoreLogic::IsFlush(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:6311,System.Boolean Poker.ScoreLogic::IsFlush(System.Collections.Generic.List`1<Poker.ICard>)
DA:52,6311
DA:53,37866
DA:54,1477
DA:55,1477
DA:57,4834
DA:58,6311
BRDA:53,47,0,1477
BRDA:53,47,1,4834
FN:60,System.Boolean Poker.ScoreLogic::IsStraight(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2513,System.Boolean Poker.ScoreLogic::IsStraight(System.Collections.Generic.List`1<Poker.ICard>)
DA:61,2513
DA:62,3137
DA:63,624
DA:65,2671
DA:66,782
DA:68,1361
DA:69,254
DA:72,1216
DA:73,363
DA:76,490
DA:86,2513
BRDA:62,19,0,624
BRDA:62,19,1,1889
BRDA:65,52,0,782
BRDA:65,52,1,1107
BRDA:68,86,0,254
BRDA:68,86,1,853
BRDA:72,105,0,363
BRDA:72,105,1,490
FN:88,System.Boolean Poker.ScoreLogic::IsThreeOfAKind(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2810,System.Boolean Poker.ScoreLogic::IsThreeOfAKind(System.Collections.Generic.List`1<Poker.ICard>)
DA:89,2810
DA:90,2810
DA:91,2810
FN:93,System.Boolean Poker.ScoreLogic::IsTwoPair(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:786,System.Boolean Poker.ScoreLogic::IsTwoPair(System.Collections.Generic.List`1<Poker.ICard>)
DA:94,786
DA:95,786
DA:97,1326
DA:98,516
DA:101,3096
DA:104,1052
DA:105,248
DA:106,786
BRDA:97,25,0,270
BRDA:97,25,1,516
BRDA:104,76,0,268
BRDA:104,76,1,248
FN:108,System.Boolean Poker.ScoreLogic::IsPair(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:1840,System.Boolean Poker.ScoreLogic::IsPair(System.Collections.Generic.List`1<Poker.ICard>)
DA:109,1840
DA:110,1840
DA:111,1840
FN:113,System.Collections.Generic.List`1<Poker.IPlayer> Poker.ScoreLogic::DetermineWinners(System.Collections.Generic.List`1<Poker.IPlayer>)
FNDA:84,System.Collections.Generic.List`1<Poker.IPlayer> Poker.ScoreLogic::DetermineWinners(System.Collections.Generic.List`1<Poker.IPlayer>)
DA:114,84
DA:116,84
DA:117,278
DA:119,84
DA:120,53
DA:121,53
DA:124,31
DA:125,282
DA:126,63
DA:127,63
DA:128,31
DA:130,372
DA:131,155
DA:132,421
DA:133,421
DA:134,155
DA:136,31
DA:138,179
DA:139,43
DA:140,43
DA:141,43
DA:142,31
DA:143,84
BRDA:119,51,0,53
BRDA:119,51,1,31
BRDA:125,134,1,63
BRDA:125,134,0,31
BRDA:130,312,1,155
BRDA:130,312,0,31
BRDA:138,366,1,43
BRDA:138,366,0,31
FN:147,Poker.HandType Poker.ScoreLogic::GetHighestHandType(System.Collections.Generic.List`1<Poker.IPlayer>)
FNDA:84,Poker.HandType Poker.ScoreLogic::GetHighestHandType(System.Collections.Generic.List`1<Poker.IPlayer>)
DA:148,84
DA:149,278
DA:150,84
FN:151,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::SortByRankAndSuite(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:2538,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::SortByRankAndSuite(System.Collections.Generic.List`1<Poker.ICard>)
DA:152,2538
DA:153,15228
DA:154,2538
DA:155,32994
DA:156,12690
DA:157,12690
DA:158,12690
DA:160,2538
DA:161,2538
BRDA:155,79,1,12690
BRDA:155,79,0,2538
FN:162,Poker.Rank Poker.ScoreLogic::MostPopularCard(System.Collections.Generic.List`1<Poker.ICard>)
FNDA:7240,Poker.Rank Poker.ScoreLogic::MostPopularCard(System.Collections.Generic.List`1<Poker.ICard>)
DA:163,7240
DA:164,7240
DA:165,42360
DA:166,34222
DA:167,14480
DA:168,7240
DA:169,7240
FN:170,System.Boolean Poker.ScoreLogic::IsAmmountOfMost(System.Int32,System.Collections.Generic.List`1<Poker.ICard>)
FNDA:6672,System.Boolean Poker.ScoreLogic::IsAmmountOfMost(System.Int32,System.Collections.Generic.List`1<Poker.ICard>)
DA:171,6672
DA:172,6672
DA:173,39000
DA:174,10716
DA:175,4650
DA:176,6672
BRDA:174,49,0,2022
BRDA:174,49,1,4650
FN:178,System.Collections.Generic.List`1<Poker.Hand> Poker.ScoreLogic::SortByPointCards(System.Collections.Generic.List`1<Poker.Hand>)
FNDA:31,System.Collections.Generic.List`1<Poker.Hand> Poker.ScoreLogic::SortByPointCards(System.Collections.Generic.List`1<Poker.Hand>)
DA:179,31
DA:180,31
DA:181,219
DA:182,63
DA:183,63
DA:184,63
DA:185,31
DA:186,31
BRDA:181,47,1,63
BRDA:181,47,0,31
FN:188,Poker.Hand Poker.ScoreLogic::SortByPointCards(Poker.Hand)
FNDA:63,Poker.Hand Poker.ScoreLogic::SortByPointCards(Poker.Hand)
DA:189,63
DA:190,63
DA:191,63
DA:192,63
DA:193,63
DA:197,4
DA:199,4
DA:202,2
DA:203,2
DA:204,2
DA:207,6
DA:208,6
DA:209,6
DA:213,8
DA:214,8
DA:215,8
DA:219,6
DA:221,6
DA:225,8
DA:226,8
DA:227,8
DA:230,8
DA:231,8
DA:232,8
DA:236,8
DA:237,8
DA:238,8
DA:239,8
DA:241,8
DA:242,6
DA:243,6
DA:244,6
DA:245,6
DA:247,2
DA:248,2
DA:249,2
DA:250,2
DA:252,8
DA:253,8
DA:257,6
DA:258,6
DA:259,6
DA:262,7
DA:263,7
DA:266,63
DA:267,819
DA:268,315
DA:269,315
DA:270,315
DA:272,63
DA:300,63
BRDA:193,40,10,4
BRDA:193,40,9,2
BRDA:193,40,8,6
BRDA:193,40,7,8
BRDA:193,40,6,6
BRDA:193,40,5,8
BRDA:193,40,4,8
BRDA:193,40,3,8
BRDA:241,289,0,6
BRDA:241,289,1,2
BRDA:193,40,2,6
BRDA:193,40,1,7
BRDA:193,40,0,63
BRDA:267,463,1,315
BRDA:267,463,0,63
FN:78,System.Boolean Poker.ScoreLogic::<IsStraight>g__isIncrementalByOne|6_0(System.Int32,Poker.ScoreLogic/<>c__DisplayClass6_0&)
FNDA:3366,System.Boolean Poker.ScoreLogic::<IsStraight>g__isIncrementalByOne|6_0(System.Int32,Poker.ScoreLogic/<>c__DisplayClass6_0&)
DA:79,3366
DA:80,20122
DA:81,9074
DA:82,13832
DA:83,6695
DA:84,987
DA:85,3366
BRDA:80,71,1,9074
BRDA:82,51,0,2379
BRDA:82,51,1,6695
BRDA:80,71,0,987
FN:274,System.Void Poker.ScoreLogic::<SortByPointCards>g__StraightCase|16_0(Poker.ScoreLogic/<>c__DisplayClass16_0&)
FNDA:10,System.Void Poker.ScoreLogic::<SortByPointCards>g__StraightCase|16_0(Poker.ScoreLogic/<>c__DisplayClass16_0&)
DA:275,10
DA:276,10
DA:277,3
DA:278,3
DA:279,3
DA:280,3
DA:281,3
DA:282,10
BRDA:276,24,0,3
BRDA:276,24,1,10
FN:283,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::<SortByPointCards>g__TakeAndRemove|16_1(Poker.Rank,Poker.ScoreLogic/<>c__DisplayClass16_0&)
FNDA:24,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::<SortByPointCards>g__TakeAndRemove|16_1(Poker.Rank,Poker.ScoreLogic/<>c__DisplayClass16_0&)
DA:284,24
DA:285,96
DA:286,96
DA:287,24
DA:288,24
FN:289,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::<SortByPointCards>g__OrderByPopThenRank|16_2(Poker.ScoreLogic/<>c__DisplayClass16_0&)
FNDA:28,System.Collections.Generic.List`1<Poker.ICard> Poker.ScoreLogic::<SortByPointCards>g__OrderByPopThenRank|16_2(Poker.ScoreLogic/<>c__DisplayClass16_0&)
DA:290,28
DA:291,28
DA:292,168
DA:293,168
DA:294,28
DA:295,28
DA:296,28
DA:297,28
DA:298,28
LF:200
LH:200
BRF:81
BRH:81
FNF:21
FNH:21
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\Writer.cs
FN:11,System.Void Poker.Writer::Write(System.String)
FNDA:0,System.Void Poker.Writer::Write(System.String)
DA:12,0
DA:13,0
DA:14,0
DA:15,0
DA:16,0
FN:9,System.Void Poker.Writer::.ctor(System.String)
FNDA:0,System.Void Poker.Writer::.ctor(System.String)
DA:10,0
LF:6
LH:0
BRF:0
BRH:0
FNF:2
FNH:0
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\GameFactory.cs
FN:5,Poker.Lib.IPokerGame Poker.Lib.GameFactory::NewGame(System.String[])
FNDA:1,Poker.Lib.IPokerGame Poker.Lib.GameFactory::NewGame(System.String[])
DA:6,1
DA:7,1
DA:8,1
DA:9,1
FN:11,Poker.Lib.IPokerGame Poker.Lib.GameFactory::LoadGame(System.String)
FNDA:0,Poker.Lib.IPokerGame Poker.Lib.GameFactory::LoadGame(System.String)
DA:12,0
DA:13,0
DA:14,0
LF:7
LH:4
BRF:0
BRH:0
FNF:2
FNH:1
end_of_record
SF:C:\Users\leokr\Documents\Visual Studio Code\Inlämningsuppgifter\Lab-2---Poker\PokerLib\StandardGame.cs
FN:11,System.Boolean Poker.Lib.StandardGame::get_OnGoing()
FNDA:1,System.Boolean Poker.Lib.StandardGame::get_OnGoing()
DA:12,1
FN:12,Poker.IPlayer[] Poker.Lib.StandardGame::get_Players()
FNDA:14,Poker.IPlayer[] Poker.Lib.StandardGame::get_Players()
DA:13,14
FN:45,System.Void Poker.Lib.StandardGame::Exit()
FNDA:2,System.Void Poker.Lib.StandardGame::Exit()
DA:46,2
DA:47,2
DA:48,2
FN:50,System.Void Poker.Lib.StandardGame::RunGame()
FNDA:5,System.Void Poker.Lib.StandardGame::RunGame()
DA:51,5
DA:52,5
DA:53,5
DA:54,7
DA:55,6
DA:56,6
DA:57,2
DA:58,1
BRDA:54,38,1,6
BRDA:54,38,0,1
FN:60,System.Void Poker.Lib.StandardGame::fullGame()
FNDA:6,System.Void Poker.Lib.StandardGame::fullGame()
DA:61,6
DA:62,6
DA:63,5
DA:64,4
DA:65,2
DA:66,2
FN:68,System.Void Poker.Lib.StandardGame::DetermineWinner()
FNDA:4,System.Void Poker.Lib.StandardGame::DetermineWinner()
DA:69,4
DA:70,4
DA:71,4
DA:72,4
DA:73,2
DA:74,2
DA:75,2
DA:76,2
DA:77,1
DA:79,2
DA:80,2
DA:81,1
DA:82,2
BRDA:72,36,0,2
BRDA:72,36,1,2
FN:84,System.Void Poker.Lib.StandardGame::SaveGameAndExit(System.String)
FNDA:0,System.Void Poker.Lib.StandardGame::SaveGameAndExit(System.String)
DA:85,0
DA:86,0
DA:87,0
DA:88,0
FN:89,System.Void Poker.Lib.StandardGame::InitialDeal()
FNDA:6,System.Void Poker.Lib.StandardGame::InitialDeal()
DA:90,6
DA:91,6
DA:92,37
DA:93,11
DA:94,11
DA:95,11
DA:96,11
DA:98,5
BRDA:92,102,1,11
BRDA:92,102,0,5
FN:101,System.Void Poker.Lib.StandardGame::Playerturns()
FNDA:5,System.Void Poker.Lib.StandardGame::Playerturns()
DA:102,5
DA:103,34
DA:104,10
DA:105,10
DA:106,10
DA:107,10
DA:108,10
DA:109,10
DA:110,10
DA:111,10
DA:112,9
DA:113,4
BRDA:103,140,1,10
BRDA:103,140,0,4
FN:13,System.Void Poker.Lib.StandardGame::.ctor(Poker.IReader)
FNDA:12,System.Void Poker.Lib.StandardGame::.ctor(Poker.IReader)
DA:14,12
DA:15,12
DA:16,12
DA:17,12
DA:18,0
FN:19,System.Void Poker.Lib.StandardGame::.ctor(System.String[])
FNDA:11,System.Void Poker.Lib.StandardGame::.ctor(System.String[])
DA:20,11
DA:21,11
DA:22,128
DA:24,34
DA:25,31
DA:27,12
DA:29,11
DA:31,8
DA:32,8
DA:33,62
DA:34,23
DA:35,23
DA:36,23
DA:37,8
BRDA:22,44,1,32
BRDA:24,26,0,1
BRDA:24,26,1,31
BRDA:22,44,0,10
BRDA:27,56,0,1
BRDA:27,56,1,9
BRDA:29,80,0,1
BRDA:29,80,1,8
BRDA:33,161,1,23
BRDA:33,161,0,8
LF:75
LH:70
BRF:18
BRH:18
FNF:11
FNH:10
end_of_record